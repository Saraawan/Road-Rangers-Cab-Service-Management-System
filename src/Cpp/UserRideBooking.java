/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CCP;

import java.awt.HeadlessException;
import javax.swing.ImageIcon;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer
 */
public class UserRideBooking extends javax.swing.JFrame {

    String DataBasePath = "jdbc:oracle:thin:@localhost:1521:XE";

    /**
     * Creates new form UserRideBooking
     */
    ImageIcon bike = new ImageIcon("Bike1.png");
    ImageIcon rickshaw = new ImageIcon("rickshaw.png");
    ImageIcon miniride = new ImageIcon("mini.png");
    ImageIcon acride = new ImageIcon("acride.png");
    ImageIcon premiumride = new ImageIcon("premiumride.png");

    public UserRideBooking() {
        initComponents();

    }

    public UserRideBooking(String username, String phone) {
        initComponents();

        this.setTitle("Book a Ride");
        dashboardusername.setText(username);
        dashboardphonenumber.setText(phone);
        setLocationRelativeTo(null);

        bikepic.setText("");
        bikepic.setIcon(bike);
        rickshawpic.setText("");
        rickshawpic.setIcon(rickshaw);
        miniridepic.setText("");
        miniridepic.setIcon(miniride);
        acridepic.setText("");
        acridepic.setIcon(acride);
        premiumridepic.setText("");
        premiumridepic.setIcon(premiumride);

        userSource.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userSource.setSelectedItem("");
                buttonGroup1.clearSelection();
                totaldistance.setText("");
                totalfair.setText("");

            }
        });
        userDestination.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                buttonGroup1.clearSelection();
                totaldistance.setText("");
                totalfair.setText("");

            }
        });

        userSource.setSelectedItem("Select items");
        userSource.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userSource.setSelectedItem("");
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userSource = new javax.swing.JComboBox();
        userDestination = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        dashboardusername = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dashboardphonenumber = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        bikeRadio = new javax.swing.JRadioButton();
        riskshawRadio = new javax.swing.JRadioButton();
        minirideRadio = new javax.swing.JRadioButton();
        acrideRadio = new javax.swing.JRadioButton();
        premiumrideRadio = new javax.swing.JRadioButton();
        bikepic = new javax.swing.JLabel();
        rickshawpic = new javax.swing.JLabel();
        miniridepic = new javax.swing.JLabel();
        acridepic = new javax.swing.JLabel();
        premiumridepic = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        bookButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totaldistance = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        totalfair = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        comments = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Book a Ride");

        jLabel2.setText("Select Source:");

        jLabel3.setText("Select Destination:");

        userSource.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Quaid-e-Azam House Museum (Jinnah House) - 434, Manora Cantt, Karachi", "Pakistan Maritime Museum - West Wharf, Karachi", "Frere Hall, Shahrah-e-Iran, Saddar, Karachi" }));
        userSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSourceActionPerformed(evt);
            }
        });

        userDestination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hilal-e-Ahmar (Red Crescent) - Clifton, Karachi", "Pakistan Army Museum - Clifton, Karachi", "Karachi Zoo, Garden East, Karachi" }));
        userDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDestinationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(userSource, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userDestination, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userSource, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jLabel4.setText("Username:");

        dashboardusername.setText("username");

        jLabel8.setText("Phone:");

        dashboardphonenumber.setText("phonenumber");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dashboardusername, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dashboardphonenumber))
                                .addGap(159, 159, 159)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dashboardusername)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dashboardphonenumber)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Ride Type:"));

        buttonGroup1.add(bikeRadio);
        bikeRadio.setText("Bike");
        bikeRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bikeRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(riskshawRadio);
        riskshawRadio.setText("Rickshaw");
        riskshawRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riskshawRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(minirideRadio);
        minirideRadio.setText("Mini Ride");
        minirideRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minirideRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(acrideRadio);
        acrideRadio.setText("AC Ride");
        acrideRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acrideRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(premiumrideRadio);
        premiumrideRadio.setText("Premium Ride");
        premiumrideRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                premiumrideRadioActionPerformed(evt);
            }
        });

        bikepic.setText("Bikelabel");

        rickshawpic.setText("RickshawLabel");

        miniridepic.setText("MiniRideLabel");

        acridepic.setText("AcRideLabel");

        premiumridepic.setText("ProRideLabel");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bikeRadio)
                    .addComponent(bikepic))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(riskshawRadio)
                    .addComponent(rickshawpic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minirideRadio)
                    .addComponent(miniridepic))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acrideRadio)
                    .addComponent(acridepic))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(premiumrideRadio)
                    .addComponent(premiumridepic))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acrideRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bikeRadio)
                        .addComponent(riskshawRadio)
                        .addComponent(minirideRadio)
                        .addComponent(premiumrideRadio)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rickshawpic)
                    .addComponent(miniridepic)
                    .addComponent(acridepic)
                    .addComponent(premiumridepic)
                    .addComponent(bikepic))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        bookButton.setText("Book");
        bookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Total Distance(km):");

        totaldistance.setEditable(false);

        jLabel6.setText("Fare:");

        totalfair.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totaldistance)
                    .addComponent(totalfair, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totaldistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(totalfair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jLabel7.setText("Comments/ Wishes:");

        comments.setColumns(20);
        comments.setRows(5);
        jScrollPane1.setViewportView(comments);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void premiumrideRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_premiumrideRadioActionPerformed
        // TODO add your handling code here:
        if (premiumrideRadio.isSelected()) {
            totaldistance.setText("");
            totalfair.setText("");
            int source = userSource.getSelectedIndex();
            int Destination = userDestination.getSelectedIndex();
            double fare1km = 5.8;

            if (source == 0 && Destination == 0) {
                double totald = 32;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 1) {
                double totald = 73;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 2) {
                double totald = 26;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 0) {
                double totald = 4;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 1) {
                double totald = 9;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 2) {
                double totald = 23;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 0) {
                double totald = 18;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 1) {
                double totald = 20;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 2) {
                double totald = 14;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            }
        }
    }//GEN-LAST:event_premiumrideRadioActionPerformed

    private void minirideRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minirideRadioActionPerformed
        // TODO add your handling code here:
        if (minirideRadio.isSelected()) {
            totaldistance.setText("");
            totalfair.setText("");
            int source = userSource.getSelectedIndex();
            int Destination = userDestination.getSelectedIndex();
            double fare1km = 7;

            if (source == 0 && Destination == 0) {
                double totald = 32;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 1) {
                double totald = 73;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 2) {
                double totald = 26;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 0) {
                double totald = 4;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");

            } else if (source == 1 && Destination == 1) {
                double totald = 9;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 2) {
                double totald = 23;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 0) {
                double totald = 18;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 1) {
                double totald = 20;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 2) {
                double totald = 14;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            }
        }


    }//GEN-LAST:event_minirideRadioActionPerformed

    private void riskshawRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riskshawRadioActionPerformed
        // TODO add your handling code here:
        if (riskshawRadio.isSelected()) {
            totaldistance.setText("");
            totalfair.setText("");
            int source = userSource.getSelectedIndex();
            int Destination = userDestination.getSelectedIndex();
            double bikefare1km = 6.1;

            if (source == 0 && Destination == 0) {
                double totald = 32;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 1) {
                double totald = 73;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 2) {
                double totald = 26;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 0) {
                double totald = 4;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 1) {
                double totald = 9;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 2) {
                double totald = 23;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 0) {
                double totald = 18;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 1) {
                double totald = 20;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 2) {
                double totald = 14;

                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            }
        }
    }//GEN-LAST:event_riskshawRadioActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        String username = dashboardusername.getText();

        UserDashboard ud = new UserDashboard(username);
        ud.show();
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    
        private static int getCurrentTimeAsNumber() {
        SimpleDateFormat timeFormat = new SimpleDateFormat("HHmmssSSS");
        String currentTime = timeFormat.format(new Date());
        return Integer.parseInt(currentTime);
    }
        
    private void bookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookButtonActionPerformed
        // TODO add your handling code here:

        
        int BookingID = getCurrentTimeAsNumber();
        String username = dashboardusername.getText();
        String uSource = (String) userSource.getSelectedItem();
        String uDestination = (String) userDestination.getSelectedItem();
        String status = "Active";
        String commentsandwishes = comments.getText();
        String totalDistance = totaldistance.getText();
        String phonenumber = dashboardphonenumber.getText();
        double fare = Double.parseDouble(totalfair.getText());
        Enumeration<AbstractButton> radioButtons = buttonGroup1.getElements();
        String rideType = "";
        while (radioButtons.hasMoreElements()) {
            AbstractButton button = radioButtons.nextElement();
            if (button.isSelected()) {
                rideType = button.getText();
                break;
            }
        }

        try {
            Connection con = null;
            PreparedStatement pst = null;
            ResultSet rs = null;

            Class.forName("oracle.jdbc.driver.OracleDriver"); // Fixed driver class name
                    String url = "jdbc:oracle:thin:@localhost:1521:XE";
                    String usernamee = "system";
                    String passwordd = "awansara123";
                    con = DriverManager.getConnection(url, usernamee, passwordd);
            String query = "select * from CAPTAINS where VehicalType='" + rideType + "'";

            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (rs.next()) {

                try {
                   Class.forName("oracle.jdbc.driver.OracleDriver"); // Fixed driver class name
               
                    con = DriverManager.getConnection(url, usernamee, passwordd);
                    String query1 = "insert into BOOKING(PassengerUsername,PassengerSource,PassengerDestination,PassengerPhone,PassengerRideType,Status,commentsandwishes,TotalDistance,Fare, BookingID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    pst = con.prepareStatement(query1);
                    pst.setString(1, username);
                    pst.setString(2, uSource);
                    pst.setString(3, uDestination);
                    pst.setString(4, phonenumber);
                    pst.setString(5, rideType);
                    pst.setString(6, status);
                    pst.setString(7, commentsandwishes);
                    pst.setString(8, totalDistance);
                    pst.setDouble(9, fare);
                    pst.setInt(10, BookingID);

                    int rows = pst.executeUpdate();
                    if (rows > 0) {
                        JOptionPane.showMessageDialog(this, "Booking Successful");
                        UserDashboard ud = new UserDashboard(username);
                        ud.tableUpdate();
                        ud.show();
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Booking failed");
                    }

                } catch (HeadlessException | ClassNotFoundException | SQLException e) {
                    System.out.println(e);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Requested Vehical is not available.");
            }

        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_bookButtonActionPerformed

    private void bikeRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bikeRadioActionPerformed
        if (bikeRadio.isSelected()) {
            totaldistance.setText("");
            totalfair.setText("");
            int source = userSource.getSelectedIndex();
            int Destination = userDestination.getSelectedIndex();

            if (source == 0 && Destination == 0) {
                double totald = 32;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 1) {
                double totald = 73;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 2) {
                double totald = 26;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 0) {
                double totald = 4;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");

            } else if (source == 1 && Destination == 1) {
                double totald = 9;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 2) {
                double totald = 23;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 0) {
                double totald = 18;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 1) {
                double totald = 20;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 2) {
                double totald = 14;
                double bikefare1km = 6.6;
                double finalTotalDistance = totald * bikefare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            }
        }
    }//GEN-LAST:event_bikeRadioActionPerformed

    private void acrideRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acrideRadioActionPerformed
        // TODO add your handling code here:
        if (acrideRadio.isSelected()) {
            totaldistance.setText("");
            totalfair.setText("");
            int source = userSource.getSelectedIndex();
            int Destination = userDestination.getSelectedIndex();
            double fare1km = 20;

            if (source == 0 && Destination == 0) {
                double totald = 32;

                double finalTotalDistance = (totald * fare1km)+120;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 1) {
                double totald = 73;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 0 && Destination == 2) {
                double totald = 26;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 0) {
                double totald = 4;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 1) {
                double totald = 9;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 1 && Destination == 2) {
                double totald = 23;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 0) {
                double totald = 18;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 1) {
                double totald = 20;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            } else if (source == 2 && Destination == 2) {
                double totald = 14;

                double finalTotalDistance = totald * fare1km;
                totalfair.setText("" + finalTotalDistance);
                totaldistance.setText(totald + " km ");
            }
        }
    }//GEN-LAST:event_acrideRadioActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        totaldistance.setText("");
        totalfair.setText("");
        comments.setText("");
        buttonGroup1.clearSelection();

        riskshawRadio.setSelected(false);
        minirideRadio.setSelected(false);
        acrideRadio.setSelected(false);
        premiumrideRadio.setSelected(false);


    }//GEN-LAST:event_clearButtonActionPerformed

    private void userSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSourceActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_userSourceActionPerformed

    private void userDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userDestinationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRideBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRideBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRideBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRideBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRideBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton acrideRadio;
    private javax.swing.JLabel acridepic;
    private javax.swing.JRadioButton bikeRadio;
    private javax.swing.JLabel bikepic;
    public javax.swing.JButton bookButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextArea comments;
    private javax.swing.JLabel dashboardphonenumber;
    private javax.swing.JLabel dashboardusername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton minirideRadio;
    private javax.swing.JLabel miniridepic;
    private javax.swing.JRadioButton premiumrideRadio;
    private javax.swing.JLabel premiumridepic;
    private javax.swing.JLabel rickshawpic;
    private javax.swing.JRadioButton riskshawRadio;
    private javax.swing.JTextField totaldistance;
    private javax.swing.JTextField totalfair;
    private javax.swing.JComboBox userDestination;
    private javax.swing.JComboBox userSource;
    // End of variables declaration//GEN-END:variables
}
